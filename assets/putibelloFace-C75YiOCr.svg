<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="26.666698"
   height="29.670893"
   inkscape:version="1.3.2 (091e20e, 2023-11-25, custom)"
   sodipodi:docname="putibello.svg"
   version="1.1"
   viewBox="0 0 7.055342 7.8504731"
   id="svg75"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:current-layer="g68"
     inkscape:cx="149.75"
     inkscape:cy="122.625"
     inkscape:deskcolor="#d1d1d1"
     inkscape:pagecheckerboard="0"
     inkscape:pageopacity="0.0"
     inkscape:showpageshadow="2"
     inkscape:window-height="991"
     inkscape:window-maximized="1"
     inkscape:window-width="1920"
     inkscape:window-x="-9"
     inkscape:window-y="-9"
     inkscape:zoom="4"
     pagecolor="#ffffff"
     id="namedview1" />
  <g
     transform="matrix(0.43424,0,0,0.43424,-37.610083,-5.7371994)"
     fill="#f2f810"
     stroke="#3b3322"
     stroke-linejoin="round"
     stroke-width="0.6407"
     style="display:none;fill:#ae0303"
     id="g4">
    <path
       d="m 105.34,-36.007 -72.43,12.493 20.741,9.1453 -42.135,19.026 81.17,-13.147 -25.069,-9.5538 z"
       style="fill:#ae0303"
       id="path2" />
    <path
       d="M 105.34,5.2367 32.91,17.7297 53.651,26.875 11.516,45.901 92.686,32.754 67.617,23.2002 Z"
       style="fill:#ae0303"
       id="path3" />
    <path
       d="M 105.34,42.606 32.91,55.099 53.651,64.2443 11.516,83.2703 92.686,70.1233 67.617,60.5695 Z"
       style="fill:#ae0303"
       id="path4" />
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();</script>
  <g
     inkscape:groupmode="layer"
     inkscape:label="gato"
     id="g75"
     transform="translate(-34.461223,-29.68375)">
    <g
       transform="matrix(0.59415,0,0,0.59415,29.215,19.771)"
       id="g73">
      <path
         d="m 22.099,35.15 c 1.4967,1.8943 1.5669,3.391 3.2741,3.391 1.7072,0 2.1281,-2.0346 2.3152,-4.0458 0.18709,-2.0112 0.23386,-5.5659 -0.1637,-6.057 -0.39756,-0.49111 -0.95883,0.09354 -1.0056,0.42095 -0.04677,0.3274 -0.07016,3.2273 -0.09354,3.6482 -0.02339,0.42095 -0.07016,1.5435 -0.09354,2.1048 -0.02463,0.59112 -0.04678,2.2451 -0.37418,2.362 -0.32741,0.11693 -0.77175,0.32741 -1.2161,-0.21048 -0.44434,-0.53788 -1.4266,-2.4088 -1.4266,-2.4088"
         style="fill:#e4780e;stroke:#000000;stroke-width:0.26458;stroke-linecap:round;stroke-linejoin:round"
         sodipodi:nodetypes="cssssssssc"
         id="path46" />
      <path
         d="m 16.36,34.089 c -0.31442,2.181 1.8151,3.1546 1.9182,3.3073 0,0 -2.0175,0.39688 -2.8112,1.1906 -0.21516,0.21517 -0.29496,0.33323 -0.19624,0.47217 0.09581,0.13486 0.49543,-0.02903 0.49543,-0.02903 0,0 -0.2931,0.38181 -0.16412,0.50132 0.15741,0.14586 0.39139,-0.26216 0.59484,-0.24628 0.12111,0.0095 -0.41338,0.337 -0.30706,0.50175 0.15792,0.24472 0.81309,-0.09774 0.867,-0.10853 0.4961,-0.09922 2.4805,-0.92605 3.1419,-1.7529 0.66146,-0.82683 -0.03307,-1.4221 -0.33073,-1.9844 -0.29766,-0.56224 -0.23151,-2.6789 -1.0253,-3.3404 -1.1824,-0.73482 -2.0155,0.32742 -2.1828,1.4883 z"
         style="fill:#e4780e;stroke:#000000;stroke-width:0.26458;stroke-linecap:round;stroke-linejoin:round"
         sodipodi:nodetypes="scsacacasssss"
         id="path47" />
      <g
         id="g49">
        <path
           d="m 10.92,20.501 c -0.825,-1.7738 -0.4125,-3.63 -0.4125,-3.63 0,0 2.2275,0.99 2.5988,2.145 0.37125,1.155 -2.1863,1.485 -2.1863,1.485 z"
           style="fill:#e4780e;stroke:#000000;stroke-width:0.37418;stroke-linecap:round;stroke-linejoin:round"
           id="path48" />
        <path
           d="m 12.666,19.282 c -0.39688,-0.4961 -1.4387,-1.3064 -1.4387,-1.3064 0,0 -0.14883,0.97566 0.11576,1.8852 0.26459,0.90954 1.3229,-0.57878 1.3229,-0.57878 z"
           style="fill:#983600"
           id="path49" />
      </g>
      <g
         id="g51">
        <path
           d="m 18.941,20.575 c 0.79093,-1.7005 0.39547,-3.4801 0.39547,-3.4801 0,0 -2.1355,0.94912 -2.4914,2.0564 -0.35592,1.1073 2.096,1.4237 2.096,1.4237 z"
           style="fill:#e4780e;stroke:#000000;stroke-width:0.35872;stroke-linecap:round;stroke-linejoin:round"
           id="path50" />
        <path
           d="m 17.304,19.43 c 0.39688,-0.4961 1.4387,-1.3064 1.4387,-1.3064 0,0 0.14883,0.97566 -0.11576,1.8852 -0.26459,0.90954 -1.3229,-0.57878 -1.3229,-0.57878 z"
           style="fill:#983600"
           id="path51" />
      </g>
      <ellipse
         cx="14.767"
         cy="24.368"
         rx="5.7821002"
         ry="5.3734002"
         style="fill:#e4780e;stroke:#000000;stroke-width:0.31093;stroke-linecap:round;stroke-linejoin:round"
         id="ellipse51" />
      <g
         transform="matrix(1.1356,0,0,1.1356,2.7632,-2.1461)"
         id="g53">
        <ellipse
           cx="12.352"
           cy="22.242001"
           rx="0.90951002"
           ry="0.74414998"
           style="fill:#ffffff;stroke:#000000;stroke-width:0.13229;stroke-linecap:round;stroke-linejoin:round"
           id="ellipse52" />
        <ellipse
           cx="12.359"
           cy="22.211"
           rx="0.54259002"
           ry="0.65368003"
           style="fill:#06a600"
           id="ellipse53" />
        <path
           d="m 12.359,21.585 c 0,0 -0.1754,0.21048 -0.18709,0.63143 -0.01169,0.42095 0.1637,0.61974 0.1637,0.61974 0,0 0.12862,-0.40926 0.12862,-0.65481 0,-0.24556 -0.10524,-0.59635 -0.10524,-0.59635 z"
           id="path53" />
      </g>
      <g
         transform="matrix(1.1135,0,0,1.1135,-1.384,-2.4471)"
         id="g62">
        <ellipse
           cx="14.435"
           cy="26.375999"
           rx="1.819"
           ry="1.1741"
           style="fill:#ea8a4c"
           id="ellipse54" />
        <g
           id="g56">
          <path
             d="m 13.738,24.807 0.76126,1.1419 0.74122,-1.1219 c 0,0 -0.1803,-0.38063 -0.68112,-0.4207 -0.50083,-0.04006 -0.82136,0.40066 -0.82136,0.40066 z"
             style="fill:#9f460c;stroke:#000000;stroke-width:0.16026;stroke-linecap:round;stroke-linejoin:round"
             id="path54" />
          <path
             d="m 14.485,25.962 c -0.04961,0.69454 -0.42995,1.0583 -0.90951,0.84336 -0.47956,-0.21498 -0.42995,-0.39688 -0.42995,-0.39688"
             style="fill:none;stroke:#000000;stroke-width:0.13229;stroke-linecap:round;stroke-linejoin:round"
             id="path55" />
          <path
             d="m 14.517,25.962 c 0.04961,0.69454 0.42995,1.0583 0.90951,0.84336 0.47956,-0.21498 0.42995,-0.39688 0.42995,-0.39688"
             style="fill:none;stroke:#000000;stroke-width:0.13229;stroke-linecap:round;stroke-linejoin:round"
             id="path56" />
        </g>
        <path
           d="m 16.155,25.83 c 0.82683,-0.47956 1.604,-0.42995 1.604,-0.42995"
           style="fill:none;stroke:#000000;stroke-width:0.13229;stroke-linecap:round;stroke-linejoin:round"
           id="path57" />
        <path
           d="m 16.293,26.207 c 0.90738,-0.30048 1.6581,-0.09308 1.6581,-0.09308"
           style="fill:none;stroke:#000000;stroke-width:0.13229;stroke-linecap:round;stroke-linejoin:round"
           id="path58" />
        <path
           d="m 16.298,26.585 c 0.95292,-0.07457 1.6321,0.30646 1.6321,0.30646"
           style="fill:none;stroke:#000000;stroke-width:0.13229;stroke-linecap:round;stroke-linejoin:round"
           id="path59" />
        <path
           d="M 12.742,25.764 C 11.91517,25.28444 11.138,25.33405 11.138,25.33405"
           style="fill:none;stroke:#000000;stroke-width:0.13229;stroke-linecap:round;stroke-linejoin:round"
           id="path60" />
        <path
           d="M 12.604,26.141 C 11.69662,25.84052 10.9459,26.04792 10.9459,26.04792"
           style="fill:none;stroke:#000000;stroke-width:0.13229;stroke-linecap:round;stroke-linejoin:round"
           id="path61" />
        <path
           d="m 12.6,26.519 c -0.95292,-0.07457 -1.6321,0.30646 -1.6321,0.30646"
           style="fill:none;stroke:#000000;stroke-width:0.13229;stroke-linecap:round;stroke-linejoin:round"
           id="path62" />
      </g>
      <g
         transform="matrix(1.1356,0,0,1.1356,-1.1559,-2.2288)"
         id="g63">
        <ellipse
           cx="12.352"
           cy="22.242001"
           rx="0.90951002"
           ry="0.74414998"
           style="fill:#ffffff;stroke:#000000;stroke-width:0.13229;stroke-linecap:round;stroke-linejoin:round"
           id="ellipse62" />
        <ellipse
           cx="12.359"
           cy="22.211"
           rx="0.54259002"
           ry="0.65368003"
           style="fill:#06a600"
           id="ellipse63" />
        <path
           d="m 12.359,21.585 c 0,0 -0.1754,0.21048 -0.18709,0.63143 -0.01169,0.42095 0.1637,0.61974 0.1637,0.61974 0,0 0.12862,-0.40926 0.12862,-0.65481 0,-0.24556 -0.10524,-0.59635 -0.10524,-0.59635 z"
           id="path63" />
      </g>
      <path
         d="m 20.008,35.024 c -0.31442,2.181 1.8151,3.1546 1.9182,3.3073 0,0 -2.0175,0.39688 -2.8112,1.1906 -0.21516,0.21517 -0.29496,0.33323 -0.19624,0.47217 0.09581,0.13486 0.49543,-0.02903 0.49543,-0.02903 0,0 -0.2931,0.38181 -0.16412,0.50132 0.15741,0.14586 0.39139,-0.26216 0.59484,-0.24628 0.12111,0.0095 -0.41338,0.337 -0.30706,0.50175 0.15792,0.24472 0.81309,-0.09774 0.867,-0.10853 0.4961,-0.09922 2.4805,-0.92605 3.1419,-1.7529 0.66146,-0.82683 -0.03307,-1.4221 -0.33073,-1.9844 -0.29766,-0.56224 -0.23151,-2.6789 -1.0253,-3.3404 -1.1824,-0.73482 -2.0155,0.32742 -2.1828,1.4883 z"
         style="fill:#e4780e;stroke:#000000;stroke-width:0.26458;stroke-linecap:round;stroke-linejoin:round"
         sodipodi:nodetypes="scsacacasssss"
         id="path64" />
      <path
         d="m 18.603,37.488 c 0,0.91485 -0.11708,1.3177 -0.11708,1.3177 -0.07007,0.01274 -0.70646,0.0073 -1.272,-0.19324 -0.63012,-0.22345 -1.7584,-0.64695 -2.34,-1.1689 -0.38946,-0.34954 -1.5997,-1.4005 -1.9595,-2.0971 -0.09187,-0.17787 -0.50144,-0.30593 1.3891,-0.30593 1.8905,0 4.2995,0.46557 4.2995,2.4474 z"
         style="fill:#ea8a4c;stroke-width:0.26458;stroke-linecap:round;stroke-linejoin:round"
         sodipodi:nodetypes="scssssss"
         id="path65" />
      <path
         d="m 12.591,33.745 c 0.25628,2.755 0.32924,5.0178 0.32924,5.0178 0,0 -1.0846,0.40971 -1.1887,0.674 -0.10411,0.26429 0.68156,0.20286 0.68156,0.20286 0,0 -0.50552,0.21976 -0.44946,0.37193 0.05606,0.15217 0.68652,0.05695 0.68652,0.05695 0,0 -0.31474,0.32997 -0.24267,0.44209 0.07208,0.11212 0.62693,0.01602 0.85918,-0.07208 0.23225,-0.08809 0.96892,-0.61429 1.017,-0.87858 0.04805,-0.26429 0.04976,-5.3965 0.04976,-5.3965"
         style="fill:#e4780e;stroke:#000000;stroke-width:0.26458;stroke-linecap:round;stroke-linejoin:round"
         sodipodi:nodetypes="ccccscscsc"
         id="path66" />
      <path
         d="m 15.303,34.671 c 0.25628,2.755 0.39538,4.6209 0.39538,4.6209 0,0 -1.0846,0.40971 -1.1887,0.674 -0.10411,0.26429 0.68156,0.20286 0.68156,0.20286 0,0 -0.50552,0.21976 -0.44946,0.37193 0.05606,0.15217 0.68652,0.05695 0.68652,0.05695 0,0 -0.31474,0.32997 -0.24267,0.44209 0.07208,0.11212 0.62693,0.01602 0.85918,-0.07208 0.23225,-0.08809 0.96892,-0.61429 1.017,-0.87858 0.04805,-0.26429 0.04976,-5.0988 0.04976,-5.0988"
         style="fill:#e4780e;stroke:#000000;stroke-width:0.26458;stroke-linecap:round;stroke-linejoin:round"
         sodipodi:nodetypes="ccccscscsc"
         id="path67" />
      <path
         d="m 23.358,31.568 c 0,0 -1.108,0.61511 -1.7219,1.0778 -0.61388,0.46271 1.9202,0.44776 1.9202,0.44776 0.0019,-0.65532 -0.10917,-1.1587 -0.19837,-1.5256 z"
         style="fill:#ff400b"
         sodipodi:nodetypes="cscc"
         id="path70" />
      <path
         d="m 27.634,32.816 c 0,0 -0.60655,0.22834 -0.95501,0.42047 -0.34846,0.19213 0.94989,0.39575 0.94989,0.39575 0.02662,-0.35258 0.04084,-0.59293 0.03435,-0.79868 z"
         style="fill:#ff400b"
         sodipodi:nodetypes="csccc"
         id="path71" />
      <path
         d="m 27.693,31.559 c 0,0 -0.61825,0.19911 -0.96671,0.39124 -0.34846,0.19213 0.94989,0.39575 0.94989,0.39575 0.01543,-0.2673 0.02231,-0.55435 0.01681,-0.78699 z"
         style="fill:#ff400b"
         sodipodi:nodetypes="cscc"
         id="path72" />
      <path
         d="m 26.732,30.594 c -0.34846,0.19213 0.94989,0.38698 0.94989,0.38698 0.02125,-0.35796 -0.0042,-0.59408 -7.29e-4,-0.78991 z"
         style="fill:#ff400b"
         sodipodi:nodetypes="cccc"
         id="path73" />
    </g>
    <path
       d="m 36.479,32.428 c 0.56224,0.04961 1.0749,0.61185 1.0749,0.61185"
       style="fill:none;stroke:#000000;stroke-width:0.13229;stroke-linecap:round;stroke-linejoin:round"
       id="path74" />
    <path
       d="m 39.571,32.428 c -0.56224,0.04961 -1.0749,0.61185 -1.0749,0.61185"
       style="fill:none;stroke:#000000;stroke-width:0.13229;stroke-linecap:round;stroke-linejoin:round"
       id="path75" />
  </g>
</svg>
